import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as i,o}from"./app-CYJ-jLiX.js";const c={};function n(l,t){return o(),a("div",null,t[0]||(t[0]=[i('<h3 id="任务" tabindex="-1"><a class="header-anchor" href="#任务"><span>任务</span></a></h3><ul class="task-list-container"><li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" id="task-item-0" checked="checked" disabled="disabled"><label class="task-list-item-label" for="task-item-0"> 在应用层编排抽奖过程</label></li></ul><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>今天的内容比较简单，最主要的问题就是表改了，然后花了很多时间去改对应的 PO 以及 SQL，然后今天第一次开发 application 层，感觉就是把 domain 层各个领域进行组装，然后形成一个又一个的流程，在这里面会使用 MQ 把流程进行切片，之后写门面接口应该就是调 application 层里面各个流程了，这样对于 Controller 层感觉挺好的，只需要简单的封装一下前端传进来的参数，然后调用 application 层执行各个流程就可以了</p><p>感觉今天最大的收获就在于学到了在开发的过程中要把整个流程切分一下，分成一块一块的，然后用 MQ 进行后续的操作，用户不需要感知到这一切，他只需要点进去，然后执行一个小的片段，然后剩下的操作可以使用 MQ 来慢慢操作，而不是之前那样直接单线程一个流程写完，又臭又长，返回得还慢，用户体验很不好，学到了流程切片，今天不亏，哈哈哈哈，这个东西还是很有用的</p>',5)]))}const r=e(c,[["render",n]]),m=JSON.parse('{"path":"/md/code/java/juc/dome.html","title":"Day1","lang":"zh-CN","frontmatter":{"title":"Day1","index":false,"icon":"laptop-code","category":["开发笔记","学习记录"],"description":"任务 在应用层编排抽奖过程 总结 今天的内容比较简单，最主要的问题就是表改了，然后花了很多时间去改对应的 PO 以及 SQL，然后今天第一次开发 application 层，感觉就是把 domain 层各个领域进行组装，然后形成一个又一个的流程，在这里面会使用 MQ 把流程进行切片，之后写门面接口应该就是调 application 层里面各个流程了，这...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Day1\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-21T10:55:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"cheniy\\",\\"url\\":\\"https://mister-hope.com\\"}]}"],["meta",{"property":"og:url","content":"https://mister-hope.github.io/md/code/java/juc/dome.html"}],["meta",{"property":"og:site_name","content":"个人博客"}],["meta",{"property":"og:title","content":"Day1"}],["meta",{"property":"og:description","content":"任务 在应用层编排抽奖过程 总结 今天的内容比较简单，最主要的问题就是表改了，然后花了很多时间去改对应的 PO 以及 SQL，然后今天第一次开发 application 层，感觉就是把 domain 层各个领域进行组装，然后形成一个又一个的流程，在这里面会使用 MQ 把流程进行切片，之后写门面接口应该就是调 application 层里面各个流程了，这..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-21T10:55:54.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-21T10:55:54.000Z"}]]},"git":{"createdTime":1750503354000,"updatedTime":1750503354000,"contributors":[{"name":"cheniy","username":"cheniy","email":"2513560214@qq.com","commits":1,"url":"https://github.com/cheniy"}]},"readingTime":{"minutes":1.14,"words":341},"filePathRelative":"md/code/java/juc/dome.md","excerpt":"<h3>任务</h3>\\n<ul class=\\"task-list-container\\">\\n<li class=\\"task-list-item\\"><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" id=\\"task-item-0\\" checked=\\"checked\\" disabled=\\"disabled\\"><label class=\\"task-list-item-label\\" for=\\"task-item-0\\"> 在应用层编排抽奖过程</label></li>\\n</ul>\\n<h3>总结</h3>\\n<p>今天的内容比较简单，最主要的问题就是表改了，然后花了很多时间去改对应的 PO 以及 SQL，然后今天第一次开发 application 层，感觉就是把 domain 层各个领域进行组装，然后形成一个又一个的流程，在这里面会使用 MQ 把流程进行切片，之后写门面接口应该就是调 application 层里面各个流程了，这样对于 Controller 层感觉挺好的，只需要简单的封装一下前端传进来的参数，然后调用 application 层执行各个流程就可以了</p>","autoDesc":true}');export{r as comp,m as data};
